import threading


p = 38778214929392346724019655005928797727148115725984656866747894462520674889774052545040751560077771533532604186816192071691755424415715142008951656245647824159925989122253308104921609315355599615075644231368291080521156149641104341


g = 37019726049472385401958208468933103618925239938091393881615537954518230795317573121205663992060149503728568276554428638481671961106988100010117282943776369188609554745773057960694809619041558778849877550590091290144841259296374527


A = 10228220170427859248186914132316267400326280843654220064612467563916157007830695316562655394876163528107742561443609201849634703541385914020049433151665726722668097622852841073809985538272064181421337940900747152604101091250095230


B = 486488344515674665710849249363914116081235472781878196160889668214582535181576092512760537071111483467919600072762811034245354679192183248978651790286158838252868068488234621878008626247109073989588065464279822404732443442103611

def deffie_cracker(x, stop):
    print(f"threading start {x}-{stop}")
    exponet = g**x
    if ((exponet) % p) ==A:
        print("found the value of x which is : ", x)
        quit()
    while True:
        x+=1
        exponet*=g
        if ((exponet) % p) ==A:
            print()
            print("found the value of x which is : ", x)
            break
        if x>=stop:
            print(f"key didn't exist between {x}-{stop}")
            break


for i in range(13000,100000, 5000):
    # threading.Thread(target=deffie_cracker, args=(i, i+5000)).start()
    deffie_cracker(i, i+5000)

